#!/bin/bash

# Script de diagnostic des d√©pendances AdonisJS
# Analyse les conflits et fournit des recommandations

set -e

echo "üîç Diagnostic des d√©pendances AdonisJS..."
echo "=========================================="

# V√©rification de l'environnement
if [ ! -d "server" ]; then
    echo "‚ùå Erreur: R√©pertoire server/ non trouv√©"
    exit 1
fi

cd server

echo "üìã √âtape 1/6: V√©rification de l'environnement syst√®me"
echo "üîç Node.js: $(node --version)"
echo "üîç npm: $(npm --version)"
echo "üîç R√©pertoire: $(pwd)"

echo ""
echo "üìã √âtape 2/6: Analyse du package.json"
if [ -f "package.json" ]; then
    echo "‚úÖ package.json trouv√©"
    
    # Extraction des versions AdonisJS
    echo "üîç Versions AdonisJS dans package.json:"
    grep -E "@adonisjs/[^:]+" package.json | head -10 || echo "   Aucune d√©pendance AdonisJS trouv√©e"
else
    echo "‚ùå package.json non trouv√©"
    exit 1
fi

echo ""
echo "üìã √âtape 3/6: V√©rification des node_modules"
if [ -d "node_modules" ]; then
    echo "‚úÖ node_modules trouv√©"
    
    # V√©rification des packages AdonisJS install√©s
    echo "üîç Packages AdonisJS install√©s:"
    if [ -d "node_modules/@adonisjs" ]; then
        ls -la node_modules/@adonisjs/ | head -10
    else
        echo "   Aucun package AdonisJS install√©"
    fi
    
    # V√©rification des conflits
    echo ""
    echo "üîç V√©rification des conflits de d√©pendances:"
    npm ls --depth=0 2>&1 | grep -E "(conflict|error|unmet peer|ERESOLVE)" || echo "   Aucun conflit d√©tect√©"
else
    echo "‚ö†Ô∏è  node_modules non trouv√© - ex√©cutez 'npm install' d'abord"
fi

echo ""
echo "üìã √âtape 4/6: Analyse des erreurs npm"
echo "üîç Tentative d'installation pour d√©tecter les erreurs:"
npm install --dry-run 2>&1 | grep -E "(error|conflict|ERESOLVE|unmet peer)" || echo "   Aucune erreur d√©tect√©e en mode dry-run"

echo ""
echo "üìã √âtape 5/6: Recommandations de correction"
echo "üîß Solutions recommand√©es:"

# D√©tection des probl√®mes sp√©cifiques
if npm ls @adonisjs/core 2>/dev/null | grep -q "missing"; then
    echo "1. ‚ùå @adonisjs/core manquant - Installer: npm install @adonisjs/core@^6.2.0"
fi

if npm ls @adonisjs/mail 2>/dev/null | grep -q "missing"; then
    echo "2. ‚ùå @adonisjs/mail manquant - Installer: npm install @adonisjs/mail@^9.0.0"
fi

# V√©rification des versions incompatibles
if npm ls @adonisjs/mail 2>/dev/null | grep -q "8.2.1"; then
    echo "3. ‚ö†Ô∏è  @adonisjs/mail v8.2.1 incompatible avec AdonisJS v6"
    echo "   Mettre √† jour vers: npm install @adonisjs/mail@^9.0.0"
fi

echo "4. üîß Nettoyer et r√©installer:"
echo "   rm -rf node_modules package-lock.json"
echo "   npm install --legacy-peer-deps"

echo "5. üîß Alternative avec force:"
echo "   npm install --force"

echo ""
echo "üìã √âtape 6/6: V√©rification de la structure AdonisJS"
echo "üîç Structure du projet:"

# V√©rification des fichiers AdonisJS typiques
ADONISJS_FILES=("start/routes.ts" "start/kernel.ts" "app/Controllers" "config/app.ts")
for file in "${ADONISJS_FILES[@]}"; do
    if [ -e "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file (manquant)"
    fi
done

echo ""
echo "üéØ R√©sum√© du diagnostic:"
echo "========================"

# R√©sum√© des probl√®mes d√©tect√©s
PROBLEMS=0

if [ ! -d "node_modules" ]; then
    echo "‚ùå node_modules manquant"
    PROBLEMS=$((PROBLEMS + 1))
fi

if npm ls --depth=0 2>&1 | grep -q "unmet peer"; then
    echo "‚ùå Conflits de d√©pendances d√©tect√©s"
    PROBLEMS=$((PROBLEMS + 1))
fi

if [ $PROBLEMS -eq 0 ]; then
    echo "‚úÖ Aucun probl√®me majeur d√©tect√©"
else
    echo "‚ö†Ô∏è  $PROBLEMS probl√®me(s) d√©tect√©(s)"
fi

echo ""
echo "üöÄ Actions recommand√©es:"
echo "========================"
echo "1. Ex√©cuter: ./scripts/fix-adonisjs-dependencies.sh"
echo "2. Tester: npm run dev"
echo "3. V√©rifier: curl http://localhost:8000/health"
echo ""
echo "üìö Documentation utile:"
echo "- AdonisJS v6: https://docs.adonisjs.com/"
echo "- Migration v5 vers v6: https://docs.adonisjs.com/guides/upgrade-guides/v6"
echo "" 